- name: Deploy Multiple Apache Docker Containers
  hosts: localhost
  #hosts: all
  connection: local
  become: true
  tasks:
    #Install Docker python package
    - name: Install Docker Python package
      apt:
        name: python3-docker
        state: present
    # Creates docker network with /30 subnet mask
    - name: Create Docker network with user-defined subnet
      docker_network:
        name: 20024471_B9IS121-network
        ipam_config:
          - subnet: "11.11.11.0/29"
    # Pulls the latest docker image with Apache web server.
    - name: Pull Apache Docker image
      docker_image:
        name: httpd
        tag: latest
        source: pull
    # Defines the list of container configurations to add to the docker network
    # In this case, second IP is automatically assign to the bridge network between 
    # docker host computer and the containers. this is a limitation.
    - name: Define list of container configurations
      set_fact:
        container_configs:
          - name: 20024471_B9IS121-container-1
            image: httpd:latest
            ports:
              - "8080:80"
            networks:
              - name: 20024471_B9IS121-network
                ipv4_address: 11.11.11.2
              
          - name: 20024471_B9IS121-container-2
            image: httpd:latest
            ports:
              - "8081:80"
            networks:
              - name: 20024471_B9IS121-network
                ipv4_address: 11.11.11.3

          #- name: 20024471_B9IS121-container-3
          #  image: httpd:latest
          #  ports:
          #    - "8082:80"
          #  networks:
          #    - name: 20024471_B9IS121-network
          #      ipv4_address: 10.10.10.4


          #- name: 20024471_B9IS121-container-4
          #  image: httpd:latest
          #  ports:
          #    - "8083:80"
          #  networks:
          #    - name: 20024471_B9IS121-network
          #      ipv4_address: 10.10.10.5

    # iterate the list of containers and create the containers
    - name: Create Docker containers
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        ports: "{{ item.ports }}"
        networks: "{{ item.networks }}"
      loop: "{{ container_configs }}"


    # install dependencies to work
    #- name: "update {{ container_name }} package register"
    #  ansible.builtin.command:
    #    cmd: 'docker exec {{ 20024471_B9IS121-container-1 }} /bin/bash -c "apt-get update"'
    #    when: container_deps is defined